syntax = "proto2";

package ei;

enum Platform {
    IOS = 1;
    DROID = 2;
}

enum DeviceFormFactor {
    PHONE = 1;
    TABLET = 2;
}

enum AdNetwork {
    VUNGLE = 0;
    CHARTBOOST = 1;
    AD_COLONY = 2;
    HYPER_MX = 3;
    UNITY = 4;
    FACEBOOK = 5;
    APPLOVIN = 6;
}

message Backup {
    optional string gameid = 1;
    optional string gamename = 2;
    optional double backup_time = 3;
    
    optional EggStats egg_stats = 6;
    message EggStats {
        repeated uint64 egg_totals_OLD = 1;
        optional uint64 refill_uses = 2;
        optional uint64 video_doubler_times = 3;
        optional uint64 warp_1_uses = 4;
        optional uint64 warp_8_uses = 5;
        optional uint64 regular_drones = 6;
        optional uint64 unlimited_chickens_uses = 7;
        repeated double total_eggs_laid = 8;
        optional uint64 prestiges = 9;
        optional uint64 elite_drones = 10;
        optional uint64 piggy_level = 11;
        optional uint64 iap_packs_purchased = 12;
        optional uint64 boosts_spent = 13;
        optional bool piggy_full = 14;
        optional bool piggy_found_full = 15;
        optional double time_piggy_filled_realtime = 16;
        optional double time_piggy_full_gametime = 17;
        optional uint64 lost_piggy_increments = 18;
    }
    
    optional PlayerStats player_stats = 7;
    message PlayerStats {
        optional Egg max_egg_reached = 1;
        optional uint64 GE_earned = 2;
        optional uint64 GE_spent = 3;
        optional uint64 soul_eggs_2 = 4;
        optional double prestige_cash_earned = 5;
        optional double lifetime_earnings = 6;
        optional uint64 no_boost_piggy = 7;
        optional uint32 silo_permit = 8;
        repeated ResearchItem epic_researches = 9;
        optional double daily_gift_drop = 10;
        repeated NewsHeadline news = 11;
        optional double last_active_something = 12;
        optional double current_multiplier = 13;
        optional double video_doubler_expiry = 14;
        repeated AchievementInfo achievements = 15;
        optional uint64 uncliamed_golden_eggs = 16;
        optional uint64 unclaimed_soul_eggs = 17;
        repeated uint64 largest_farm_population = 18;
        repeated uint32 trophy_levels = 19;
        optional uint32 last_daily_gift_collected_day = 20;
        optional uint32 current_farm = 22 [default = 0];
        optional uint64 prophecy_eggs = 23;
        optional uint64 unclaimed_eggs_of_prophecy = 24;
        optional bool long_idle_notification_set = 25;
        optional double long_idle_notification_threshold = 26;
        optional double long_idle_reward = 27;
        optional uint32 daily_gifts = 28;
        optional bool hyperloop_station = 29;
        repeated OwnedBoost boosts = 30;
        optional bool piggy_full_alert_shown = 31;
        optional uint32 time_skips = 32;
        optional double prestige_soul_boost_cash = 33;
        optional double soul_eggs = 34;
        optional double unclaimed_soul_eggs_d = 35;
        optional bool force_elite_contracts = 36;
        optional double new_player_event_end_time = 37;
        optional uint64 shell_scripts_earned = 38;
        optional uint64 shell_scripts_spent = 39;
        optional uint64 unclaimed_shell_scripts = 40;
    }
    
    optional Simulation sim = 8;
    message Simulation {
        optional Egg egg_id = 1;
        optional double total_cash = 2;
        optional double cash_spent = 3;
        optional double unclaimed_cash = 4;
        optional double last_sync = 5;
        optional uint64 population = 6;
        optional uint64 num_chickens_unsettled = 7;
        optional uint64 num_chickens_running = 8;
        optional double eggs_laid = 9;
        optional double eggs_paid_for = 10;
        optional uint32 silos_bought = 11;
        repeated uint32 housing_levels = 12;
        repeated uint64 chickens_in_coup = 13;
        repeated uint64 hab_population_indound = 14;
        repeated double hab_incubator_popuplation = 15;
        optional double hatchery_capacity = 16;
        repeated uint32 vehicle_level = 17;
        repeated ResearchItem common_research = 18;
        optional FarmType farm_type = 19;
        optional string contract_name = 20;
        repeated uint32 vehicle_multiplier = 21;
        repeated ActiveBoost active_boosts = 22;
        optional uint32 is_blocked = 23;
        optional double simulation_blocked_for = 24;
        optional uint32 boost_tokens_received = 25;
        optional uint32 boost_tokens_spent = 26;
        optional uint32 unclaimed_boost_tokens = 27;
        optional uint32 boost_tokens_given = 28;
        optional double gametime_until_next_boost_token = 29;
        optional double eggs_shipped = 30;
        optional double last_cash_boost_time = 31;
    }
    
    optional Mission mission = 9;
    message Mission {
        optional string current_mission = 1;
        optional double reference_value = 2;
        repeated string current_missions = 4;
        repeated MissionInfo missions = 3;
    }
    
    optional Misc misc = 10;
    message Misc {
        optional bool chicken_btn_pref_big = 1;
        optional bool free_hatchery_refill_given = 2;
        optional double last_share_farm_value = 3 [default = 10000000];
        optional double last_share_swarm_farm_value = 4 [default = 10000000];
        optional double last_share_swarm_size = 5 [default = 140];
        optional uint64 friend_rank = 6;
        optional uint64 friend_rank_pop = 7;
        optional uint64 global_rank = 8;
        optional uint64 global_rank_pop = 9;
        optional uint64 last_prestige_alert_soul_eggs_DEPRECATED = 10 [default = 45];
        optional bool trophy_alert = 11;
        optional bool ar_alert = 12;
        optional bool contracts_alert = 13;
        optional bool coop_alert = 14;
        optional bool switch_alert = 15;
        optional bool egg_of_prophecy_alert = 16;
        optional bool boost_token_alert = 17;
        optional bool soul_egg_alert = 18;
        optional bool backup_reminder_alert = 19;
        optional bool challenges_alert = 20;
    }
    
    repeated Simulation farms = 12;
    optional MyContracts contracts = 13;

    optional Artifacts artifacts = 14;
    message Artifacts {
        optional bool infusing = 1;
        optional ArtifactInventoryItem item_being_infused = 2;
        optional Egg egg_type_infusing = 3;
        optional double infusing_eggs_required = 4;
        optional double eggs_infused = 5;
        optional double flow_percentage_artifacts = 6 [default = 0.5];
        optional bool fueling_enabled = 7 [default = true];
        optional bool infusing_enabled_DEPRECATED = 8 [default = true];
        optional ei.MissionInfo.Spaceship last_fueled_ship = 9;
        optional double inventory_score = 10;
        optional bool enabled = 11;
        optional bool intro_shown = 12;
        optional ArtifactSpec spec_being_infused = 13;
        optional bool tank_filling_enabled = 14;
        optional uint32 tank_level = 15;
        repeated double tank_fuels = 16;
        optional double crafting_xp = 17;
    }
    
    optional ArtifactsDB artifacts_db = 15;
    optional string old_gameid = 16;
    optional string device_id = 17;
    optional string game_id = 18;
    optional bool force_offer_backup = 20;
    optional uint32 version = 21 [default = 0];
    optional bool force_backup = 22;
    
    optional Shells shells = 25;
    message Shells {
        optional bool intro_alert = 1;
        optional bool contracts_intro_alert = 2;
        repeated int32 num_new = 3;
    }
    
    optional ShellDB shell_db = 24;
    repeated string read_mail_ids = 23;
    
    message ResearchItem {
        optional string name = 1;
        optional uint32 amount_purchased = 2;
    }
    
    message NewsHeadline {
        optional string id = 1;
        optional bool read = 2;
    }
    
    message AchievementInfo {
        optional string id = 1;
        optional bool achieved = 2;
    }
    
    message ActiveBoost {
        optional string boost_id = 1;
        optional double time_remaining = 2;
        optional double reference_value = 3;
    }
    
    message OwnedBoost {
        optional string boost_id = 1;
        optional uint32 count = 2;
    }
    
    message MissionInfo {
        optional string id = 1;
        optional bool completed = 2;
        optional double reference_value = 3;
    }
    optional uint64 checksum = 100;
    optional string signature = 101;
}

message EggIncFirstContactRequest {
    optional uint32 client_version = 2;
    optional Platform platform = 3;
    optional string gameid = 4;
    optional string device_id = 5;
    optional string gamename = 6;
    optional string old_gameid = 7;
    optional BasicRequestInfo rinfo = 8;
}

message EggIncFirstContactResponse {
    optional Backup backup = 1;
    optional string gameid = 2;
    repeated string ids_transferred = 3;
    optional uint32 error_code = 4 [default = 0];
    optional string error_message = 5;
    
    enum ErrorCodes {
        NO_ERROR = 0;
        EXISTING_USER_W_GAMER_ID = 1;
        USER_NOT_FOUND = 2;
        BACKUP_CONFLICT = 3;
    }
}

message DailyGiftInfo {
    optional uint32 current_day = 1;
    optional double seconds_to_next_day = 2;
}

message EggIncEvent {
    optional string name = 1;
    optional double seconds_left = 2;
    optional string pretty_name = 3;
    optional double multiplier_on_original = 4;
    optional string description = 5;
    optional double start_time = 6;
    optional double duration = 7;
}

message Reward {
    optional RewardType type_id = 1;
    optional string name = 2;
    optional double quantity = 3;
}

message Contract {
    optional string name = 1;
    optional Egg egg_id = 2;    
    repeated Goal rewards = 3;

    message Goal {
        optional GoalType type = 1;
        optional double eggs_needed = 2;
        optional RewardType type_id = 3;
        optional string name = 4;
        optional double quantity = 5;
        optional double recommended_EB = 6;
    }

    optional bool is_coop = 4;
    optional uint32 coop_size = 5;
    optional double archived_at = 6;
    optional double duration = 7;
    optional string pretty_name = 9;
    optional string description = 10;
    optional bool debug = 11;
    optional uint32 max_boosts = 12;
    optional double max_soul_eggs = 13;
    optional uint32 min_client_version = 14;
    optional double token_int = 15 [default = 60];
    
    repeated GoalSet reward_sets = 16;
    message GoalSet {
        repeated Goal rewards = 1;
    }

    optional double start_time = 17;
    optional double chicken_run_cooldown_minutes = 18 [default = 60];
    optional bool leggacy = 19;
    
    repeated GradeSpec grade_specs = 20;
    message GradeSpec {
        optional PlayerGrade grade = 1;
        repeated Goal goals = 2;
    }
    
    optional string key = 21;
    
    enum PlayerGrade {
        GRADE_UNSET = 0;
        GRADE_C = 1;
        GRADE_B = 2;
        GRADE_A = 3;
        GRADE_AA = 4;
        GRADE_AAA = 5;
    }
}

message ContractPlayerInfo {
    optional Contract.PlayerGrade grade = 1;
    optional double total_cxp = 2;
}

message BasicRequestInfo {
    optional string gameid = 1;
    optional uint32 client_version = 2;
    optional string version = 3;
    optional string build = 4;
    optional string platform = 5;
    optional string country = 6;
    optional string language = 7;
    optional bool debug = 8;
}

message ContractsRequest {
    optional double soul_eggs = 1;
    optional uint32 client_version = 5;
}

message ContractsResponse {
    repeated Contract contracts = 1;
    optional string warning_message = 4;
    optional double server_time = 2;
    optional uint32 max_eop = 3 [default = 1000];
}

message ContractCoopStatusRequest {
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional string gameid = 3;
    optional uint32 client_version = 4;
    optional BasicRequestInfo rinfo = 5;
}

message FarmProductionParams {
    optional double farm_population = 1;
    optional double farm_capacity = 2;
    optional double elr = 3;
    optional double ihr = 4;
    optional double sr = 5;
    optional double delivered = 6;
}

message PlayerFarmInfo {
    optional uint32 client_version = 20;
    optional double soul_eggs = 1;
    optional uint64 eggs_of_prophecy = 2;
    optional uint32 permit_level = 3;
    optional bool hyperloop_station = 4;
    repeated uint32 egg_medal_level = 5;
    repeated Backup.ResearchItem epic_research = 6;
    optional Egg egg_id = 7;
    optional double cash_on_hand = 8;
    repeated uint32 habs = 9;
    repeated uint64 chicken_in_coup = 10;
    repeated uint64 hab_capacity = 21;
    repeated uint32 vehicles = 11;
    repeated uint32 train_length = 12;
    optional uint32 silos_owned = 13;
    repeated Backup.ResearchItem common_research = 14;
    repeated Backup.ActiveBoost active_boosts = 15;
    optional uint32 boost_tokens_on_hand = 16;
    repeated CompleteArtifact equipped_artifacts = 17;
    optional uint64 artifact_inventory_score = 18;
    optional ShellDB.FarmConfiguration farm_appearance = 19;
    optional double timestamp = 22;
}

message ContractCoopStatusResponse {
    optional CoopStatusContainer data = 1;
}

message CoopStatusContainer {
    optional string contract_name = 1;
    optional double eggs = 2;
    optional string coop_code = 3;
    
    repeated ContributionInfo members = 4;

    message ContributionInfo {
        optional string gameid = 1;
        optional string gamename = 2;
        optional double eggs = 3;
        optional bool is_active = 4;
        optional Platform platform = 5;
        optional double rate = 6;
        optional bool is_cheating = 7;
        optional int32 rank_change = 8;
        optional string push_id = 9;
        optional uint32 ban_votes = 10;
        optional double log10_player_EB = 11;
        optional uint32 tokens = 12;
        repeated CoopBuffState buff_history = 13;
        optional uint32 boost_tokens_spent = 14;
        optional FarmProductionParams production_params = 15;
        optional bool leech = 16;
        optional bool autojoined = 17;
        optional PlayerFarmInfo farm_info = 18;
        optional string contract_identifier = 19;
        optional double chicken_run_cooldown = 20;
    }
    
    optional double time_left = 5;
    optional bool all_members_reporting = 6;
    optional double expire_time = 7;
    optional bool auto_generated = 8;
    optional string starter_gameid = 9;
    optional bool is_public = 10;
    
    repeated CoopGift gifts = 11;
    message CoopGift {
        optional string gameid = 1;
        optional string gamename = 3;
        optional uint32 amount = 2;
    }
    
    repeated ChickenRun chicken_runs = 13;
    message ChickenRun {
        optional string user_id = 1;
        optional string user_name = 3;
        optional uint64 amount = 2;
    }
    
    optional double local_timestamp = 12;
    
    enum MemberStatus {
        VALID = 0;
        KICKED_INACTIVE = 1;
        KICKED_PRIVATE = 2;
        KICKED_CHEATS = 3;
        KICKED_LEECH = 4;
    }
}

message LocalContract {
    optional Contract details = 1;
    optional string coop_code = 2;
    optional double time_accepted = 3;
    optional bool cancelled = 4;
    optional double coop_end_time = 5;
    optional double highest_reward_tier = 6;
    optional bool accepted = 7;
    optional bool new = 8;
    optional double coop_expires_at = 9;
    optional bool is_finished = 10;
    optional double my_contribution = 11;
    optional uint32 boosts_used = 12;
    optional string coop_user_id = 13;
    optional uint32 num_goals_achieved = 14;
    optional uint32 league = 15;
    optional double last_nag_time = 16;
    optional bool coop_share_farm = 17;
    optional Contract.PlayerGrade grade = 18;
}

message MyContracts {
    repeated LocalContract active_contracts = 1;
    repeated LocalContract archived_contracts = 2;
    repeated string contract_names = 3;
    repeated ContractCoopStatusResponse active_coops = 4;
}

message QueryCoopRequest {
    optional BasicRequestInfo rinfo = 5;
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional uint32 league = 4;
    optional uint32 client_version = 3;
}

message QueryCoopResponse {
    optional bool exists = 1;
    optional bool full = 2;
    optional bool expired = 5;
    optional bool different_league = 4;
    optional bool banned = 3;
}

message CreateCoopRequest {
    optional BasicRequestInfo rinfo = 10;
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional double duration = 3;
    optional string gameid = 4;
    optional string gamename = 5;
    optional Platform platform = 6;
    optional uint32 client_version = 7;
    optional double log10_player_EB = 8;
    optional uint32 league = 9;
    optional double eop = 11;
}

message CreateCoopResponse {
    optional bool success = 1;
    optional string message = 2;
}

message JoinCoopRequest {
    optional BasicRequestInfo rinfo = 10;
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional string gameid = 3;
    optional string gamename = 4;
    optional double log10_player_EB = 8;
    optional uint32 league = 9;
    optional Platform platform = 5;
    optional double seconds_remaining = 11;
    optional uint32 client_version = 7;
    optional double eop = 12;
}

message JoinCoopResponse {
    optional bool success = 1;
    optional string message = 2;
    optional bool banned = 4;
    optional string coop_code = 5;
    optional double seconds_remaining = 3;
    optional double match_percent = 6;
    optional uint32 num_members = 7;
}

message LeaveCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional string gameid = 3;
    optional uint32 client_version = 7;
}

message KickPlayerCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_name = 1;
    optional string coop_code = 2;
    optional string gameid = 3;
    optional string requesting_user_id = 4;
    
    optional Reason reason = 9;
    enum Reason {
        INVALID = 0;
        CHEATER = 1;
        IDLE = 2;
        LEECH = 3;
        PRIVATE = 4;
    }
    
    optional uint32 client_version = 7;
}

message CoopBuffState {
    optional double egg_laying_rate = 1 [default = 1];
    optional double earnings = 2 [default = 1];
    optional double server_timestamp = 3;
}

message CoopBuffHistory {
    repeated CoopBuffState history = 1;
}

message UserDataInfoRequest {
    optional BasicRequestInfo rinfo = 4;
    optional string user_id = 1;
    optional string device_id = 2;
    optional uint64 backup_checksum = 3;
}

message UserDataInfoResponse {
    optional uint64 backup_checksum = 1;
    optional double backup_total_cash = 2;
    repeated string coop_memberships = 3;
}

message PeriodicalsResponse {
    optional PeriodicalResponseContainer data = 1;
}

message PeriodicalResponseContainer {
    optional EggIncCurrentEvents events = 2;
    optional ContractsResponse contracts = 3;
//    optional ContractPlayerInfo contract_player_info = 7;
}

message EggIncCurrentEvents {
  repeated EggIncEvent events = 1;
}

message GetPeriodicalsRequest {
    optional BasicRequestInfo rinfo = 12;
    optional string gameid = 1;
    optional bool piggy_full = 2;
    optional bool piggy_found_full = 3;
    optional double seconds_full_realtime = 4;
    optional double seconds_full_gametime = 5;
    optional uint32 lost_increments = 7;
    optional double soul_eggs = 8;
    optional double mystical_earnings_mult = 13;
    optional uint32 eop = 14;
    optional bool contracts_unlocked = 15;
    optional bool artifacts_unlocked = 16;
    optional uint32 client_version = 10;
    optional bool debug = 11;
}

message ArtifactsClientInfo {
    optional double mission_capacity_mult = 1;
    optional double mission_duration_mult = 2;
    optional double mission_ftl_duration_mult = 4;
    
    repeated LaunchCount launch_counts = 3;
    message LaunchCount {
        optional ei.MissionInfo.Spaceship ship = 1;
        optional uint32 num_launches = 2;
        optional double launch_points = 3;
    }
}

message MissionInfo {
    optional Spaceship ship = 1;
    enum Spaceship {
        CHICKEN_ONE = 0;
        CHICKEN_NINE = 1;
        CHICKEN_HEAVY = 2;
        BCR = 3;
        MILLENIUM_CHICKEN = 4;
        CORELLIHEN_CORVETTE = 5;
        GALEGGTICA = 6;
        CHICKFIANT = 7;
        VOYEGGER = 8;
        HENERPRISE = 9;
    }
    
    optional Status status = 2;
    enum Status {
        FUELING = 0;
        PREPARE_TO_LAUNCH = 5;
        EXPLORING = 10;
        RETURNED = 15;
        ANALYZING = 16;
        COMPLETE = 20;
        ARCHIVED = 25;
    }
    
    optional DurationType duration_type = 3;
    enum DurationType {
        SHORT = 0;
        LONG = 1;
        EPIC = 2;
        TUTORIAL = 3;
    }
    
    repeated Fuel fuel = 4;
    message Fuel {
        optional Egg egg = 1;
        optional double amount = 2;
    }
    
    optional uint32 level = 12;
    optional double duration_seconds = 5;
    optional uint32 capacity = 9;
    optional double quality_bump = 11;
    optional double seconds_remaining = 6;
    optional double start_time_derived = 8;
    optional string mission_log = 10;
    optional string identifier = 7;
}

message ArtifactSpec {
    optional Name name = 1;
    enum Name {
        LUNAR_TOTEM = 0;
        NEODYMIUM_MEDALLION = 3;
        BEAK_OF_MIDAS = 4;
        LIGHT_OF_EGGENDIL = 5;
        DEMETERS_NECKLACE = 6;
        VIAL_MARTIAN_DUST = 7;
        ORNATE_GUSSET = 8;
        THE_CHALICE = 9;
        BOOK_OF_BASAN = 10;
        PHOENIX_FEATHER = 11;
        TUNGSTEN_ANKH = 12;
        AURELIAN_BROOCH = 21;
        CARVED_RAINSTICK = 22;
        PUZZLE_CUBE = 23;
        QUANTUM_METRONOME = 24;
        SHIP_IN_A_BOTTLE = 25;
        TACHYON_DEFLECTOR = 26;
        INTERSTELLAR_COMPASS = 27;
        DILITHIUM_MONOCLE = 28;
        TITANIUM_ACTUATOR = 29;
        MERCURYS_LENS = 30;
        TACHYON_STONE = 1;
        DILITHIUM_STONE = 31;
        SHELL_STONE = 32;
        LUNAR_STONE = 33;
        SOUL_STONE = 34;
        PROPHECY_STONE = 39;
        QUANTUM_STONE = 36;
        TERRA_STONE = 37;
        LIFE_STONE = 38;
        CLARITY_STONE = 40;
        EXTRATERRESTRIAL_ALUMINUM = 13;
        ANCIENT_TUNGSTEN = 14;
        SPACE_ROCKS = 15;
        ALIEN_WOOD = 16;
        GOLD_METEORITE = 17;
        TAU_CETI_GEODE = 18;
        CENTAURIAN_STEEL = 19;
        ERIDANI_FEATHER = 20;
        DRONE_PARTS = 35;
        CELESTIAL_BRONZE = 41;
        LALANDE_HIDE = 42;
        SOLAR_TITANIUM = 43;
        TACHYON_STONE_FRAGMENT = 2;
        DILITHIUM_STONE_FRAGMENT = 44;
        SHELL_STONE_FRAGMENT = 45;
        LUNAR_STONE_FRAGMENT = 46;
        SOUL_STONE_FRAGMENT = 47;
        PROPHECY_STONE_FRAGMENT = 48;
        QUANTUM_STONE_FRAGMENT = 49;
        TERRA_STONE_FRAGMENT = 50;
        LIFE_STONE_FRAGMENT = 51;
        CLARITY_STONE_FRAGMENT = 52;
        UNKNOWN = 10000;
    }
    
    optional Level level = 2;
    enum Level {
        INFERIOR = 0;
        LESSER = 1;
        NORMAL = 2;
        GREATER = 3;
        SUPERIOR = 4;
    }
    
    optional Rarity rarity = 3;
    enum Rarity {
        COMMON = 0;
        RARE = 1;
        EPIC = 2;
        LEGENDARY = 3;
    }
    
    optional Type type = 4;
    
    enum Type {
        ARTIFACT = 0;
        STONE = 1;
        INGREDIENT = 2;
        STONE_INGREDIENT = 3;
    }
}

message CompleteArtifact {
    optional ArtifactSpec spec = 1;
    repeated ArtifactSpec stones = 2;
}

message ArtifactInventoryItem {
    optional uint64 item_id = 1;
    optional CompleteArtifact artifact = 2;
    optional double quantity = 3;
    optional string server_id = 4;
}

message InventorySlot {
    optional bool occupied = 1;
    optional uint32 item_id = 2;
}

message ArtifactsConfigurationRequest {
    optional BasicRequestInfo rinfo = 2;
    optional uint32 client_version = 1;
}

message ArtifactsConfigurationResponse {
    repeated MissionParameters mission_parameters = 1;
    message MissionParameters {
        optional ei.MissionInfo.Spaceship ship = 1;
        
        repeated Duration durations = 3;
        message Duration {
            optional MissionInfo.DurationType duration_type = 1;
            optional double seconds = 2;
            optional float quality = 3;
            optional float min_quality = 4;
            optional float max_quality = 5;
            optional uint32 capacity = 6;
            optional uint32 level_capacity_bump = 7;
            optional float level_quality_bump = 8;
        }
        
        repeated uint32 level_mission_requirements = 4;
        optional uint32 capacity_DEPRECATED = 2;
    }
    
    repeated ArtifactParameters artifact_parameters = 2;
    message ArtifactParameters {
        optional ArtifactSpec spec = 1;
        optional double base_quality = 2;
        optional double odds_multiplier = 4;
        optional double value = 3;
        optional double crafting_price = 5;
        optional double crafting_price_low = 6;
        optional uint32 crafting_price_domain = 7;
        optional double crafting_price_curve = 8;
        optional uint64 crafting_xp = 9;
    }
    
    repeated CraftingLevelInfo crafting_level_infos = 3;
    message CraftingLevelInfo {
        optional double xp_required = 1;
        optional float rarity_mult = 2;
    }
}

message MissionRequest {
    optional BasicRequestInfo rinfo = 4;
    optional uint32 client_version = 1;
    optional string gameid = 3;
    optional MissionInfo info = 2;
    optional ArtifactsClientInfo client_info = 5;
}

message MissionResponse {
    optional bool success = 1;
    optional MissionInfo info = 2;
}

message CompleteMissionResponse {
    optional bool success = 1;
    optional MissionInfo info = 2;
    
    repeated SecureArtifactSpec artifacts = 3;
    message SecureArtifactSpec {
        optional ArtifactSpec spec = 1;
        optional string server_id = 2;
    }
    
    repeated Reward other_rewards = 4;
    optional string gameid = 5;
}

message CollectContractArtifactRewardsRequest {
    optional BasicRequestInfo rinfo = 1;
    optional string contract_identifier = 2;
    optional uint32 league = 5;
    optional uint32 goal_index = 3;
    optional ei.MissionInfo.Spaceship best_ship = 4;
}

message ArtifactsDB {
    repeated ArtifactInventoryItem inventory_items = 1;
    optional uint64 item_sequence = 2;
    repeated InventorySlot inventory_slots = 3;
    
    repeated MissionInfo mission_infos = 4;
    repeated MissionInfo mission_archive = 5;
    repeated ActiveArtifactSlot active_artifacts = 7;

    message ActiveArtifactSlot {
        optional bool occupied = 1;
        optional uint64 item_id = 2;
    }
    
    repeated ActiveArtifactSet active_artifact_sets = 11;
    message ActiveArtifactSet {
        repeated ActiveArtifactSlot slots = 1;
    }
    
    repeated CraftableArtifact crafting_data = 12;
    message CraftableArtifact {
        optional ArtifactSpec spec = 1;
        optional bool discovered = 6;
        optional bool craftable = 4;
        optional bool recipe_discovered = 5;
        optional bool seen = 2;
        optional uint32 count = 3;
    }
    
    repeated ArtifactSpec discovered_artifacts_DEPRECATED = 8;
    repeated CraftableArtifact craftable_artifacts_DEPRECATED = 9;
    repeated CraftableArtifact crafting_counts_DEPRECATED = 10;
}

message DLCItem {
    optional string name = 1;
    optional string directory = 2;
    optional string ext = 3;
    optional bool compressed = 6;
    optional uint64 original_size = 7;
    optional string url = 4;
    optional string checksum = 5;
}

message ShellSpec {
    optional string identifier = 1;
    
    optional ShellPiece primary_piece = 12;
    message ShellPiece {
        optional AssetType asset_type = 1;
        optional DLCItem dlc = 2;
    }
    
    repeated ShellPiece pieces = 11;
    repeated DLCItem alt_assets = 18;
    optional string name = 3;
    optional string set_identifier = 13;
    optional bool modified_geometry = 19;
    optional uint32 price = 4;
    optional uint32 required_eop = 5;
    optional double required_soul_eggs = 6;
    optional string required_parent_shell = 20;
    optional bool is_new = 14;
    optional bool expires = 15;
    optional double seconds_until_available = 17;
    optional double seconds_remaining = 16;
    optional bool default_appearance = 8;
    
    enum AssetType {
        COOP = 1;
        SHACK = 2;
        SUPER_SHACK = 3;
        SHORT_HOUSE = 4;
        THE_STANDARD = 5;
        LONG_HOUSE = 6;
        DOUBLE_DECKER = 7;
        WAREHOUSE = 8;
        CENTER = 9;
        BUNKER = 10;
        EGGKEA = 11;
        HAB_1K = 12;
        HANGAR = 13;
        TOWER = 14;
        HAB_10K = 15;
        EGGTOPIA = 16;
        MONOLITH = 17;
        PLANET_PORTAL = 18;
        CHICKEN_UNIVERSE = 19;
        SILO_0_SMALL = 50;
        SILO_0_MED = 51;
        SILO_0_LARGE = 52;
        SILO_1_SMALL = 53;
        SILO_1_MED = 54;
        SILO_1_LARGE = 55;
        SILO_ALL = 59;
        MAILBOX = 70;
        TROPHY_CASE = 71;
        GROUND = 72;
        HARDSCAPE = 73;
        HYPERLOOP = 74;
        DEPOT_1 = 100;
        DEPOT_2 = 101;
        DEPOT_3 = 102;
        DEPOT_4 = 103;
        DEPOT_5 = 104;
        DEPOT_6 = 105;
        DEPOT_7 = 106;
        LAB_1 = 110;
        LAB_2 = 111;
        LAB_3 = 112;
        LAB_4 = 113;
        LAB_5 = 114;
        LAB_6 = 115;
        HATCHERY_EDIBLE = 120;
        HATCHERY_SUPERFOOD = 121;
        HATCHERY_MEDICAL = 122;
        HATCHERY_ROCKET_FUEL = 123;
        HATCHERY_SUPERMATERIAL = 124;
        HATCHERY_FUSION = 125;
        HATCHERY_QUANTUM = 126;
        HATCHERY_IMMORTALITY = 127;
        HATCHERY_TACHYON = 128;
        HATCHERY_GRAVITON = 129;
        HATCHERY_DILITHIUM = 130;
        HATCHERY_PRODIGY = 131;
        HATCHERY_TERRAFORM = 132;
        HATCHERY_ANTIMATTER = 133;
        HATCHERY_DARK_MATTER = 134;
        HATCHERY_AI = 135;
        HATCHERY_NEBULA = 136;
        HATCHERY_UNIVERSE = 137;
        HATCHERY_ENLIGHTENMENT = 138;
        HATCHERY_CHOCOLATE = 139;
        HATCHERY_EASTER = 140;
        HATCHERY_WATERBALLOON = 141;
        HATCHERY_FIREWORK = 142;
        HATCHERY_PUMPKIN = 143;
        HOA_1 = 170;
        HOA_2 = 171;
        HOA_3 = 172;
        MISSION_CONTROL_1 = 180;
        MISSION_CONTROL_2 = 181;
        MISSION_CONTROL_3 = 182;
        FUEL_TANK_1 = 200;
        FUEL_TANK_2 = 201;
        FUEL_TANK_3 = 202;
        FUEL_TANK_4 = 203;
        HATCHERY_GRAVITON_TOP = 500;
        HATCHERY_NEBULA_MIDDLE = 501;
        HATCHERY_NEBULA_TOP = 502;
        HATCHERY_DARK_MATTER_RING_1 = 505;
        HATCHERY_DARK_MATTER_RING_2 = 506;
        HATCHERY_DARK_MATTER_RING_3 = 507;
        HATCHERY_AI_TOP_1 = 510;
        HATCHERY_AI_TOP_2 = 511;
        HATCHERY_AI_TOP_3 = 512;
        HATCHERY_AI_TOP_4 = 513;
        HATCHERY_UNIVERSE_PROBE = 515;
        HATCHERY_UNIVERSE_BOLT = 516;
        HATCHERY_ENLIGHTENMENT_ORB = 520;
        HYPERLOOP_TRACK = 570;
        MAILBOX_FULL = 600;
        CHICKEN = 1000;
        HAT = 1010;
        UNKNOWN = 9999;
    }
}

message ShellSetSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional uint32 price = 3;
    optional double price_mult_DEPRECATED = 8 [default = 1];
    optional double discount = 17;
    optional uint32 required_eop = 4;
    optional double required_soul_eggs = 5;
    optional string required_parent_set = 20;
    optional bool is_new = 9;
    optional bool expires = 10;
    optional double seconds_until_available = 18;
    optional double seconds_remaining = 11;
    optional bool decorator = 14;
    optional bool modified_geometry = 13;
    optional bool element_set = 7;
    optional string hex_base_color = 16;
    
    repeated VariationSpec variations = 15;
    message VariationSpec {
        optional string identifier = 1;
        optional string hex_color = 2;
        optional uint32 price = 3;
        optional int32 sort_priority = 6;
        optional bool default_appearance = 4;
        optional bool custom_appearance = 5;
    }
    
    optional DLCItem icon = 19;
    optional bool default_appearance = 6;
    optional bool custom_appearance = 12;
}

message ShellObjectSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional ShellSpec.AssetType asset_type = 3;
    optional string object_class = 14;
    repeated string icon_colors = 15;
    optional uint32 price = 4;
    optional uint32 required_eop = 5;
    optional double required_soul_eggs = 6;
    optional bool is_new = 10;
    optional bool expires = 11;
    optional double seconds_until_available = 18;
    optional double seconds_remaining = 12;
    repeated double metadata = 7;
    optional bool no_hats = 13;
    
    optional ChickenAnimation chicken_animation = 16;
    enum ChickenAnimation {
        STANDARD_RUN = 0;
        SLOWMO = 7;
        WOBBLE = 1;
        WOBBLE_LEAN = 5;
        SMOOTH = 2;
        SMOOTH_LEAN = 6;
        HOVER = 3;
        SIDEWAYS_SMOOTH = 4;
        SIDEWAYS_LEAN = 8;
    }
    
    optional int32 sort_priority = 17;
    
    repeated LODPiece pieces = 8;
    message LODPiece {
        optional DLCItem dlc = 1;
        optional uint32 lod = 2;
    }
    
    optional bool default_appearance = 9;
}

message ShellGroupSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional ShellSpec.AssetType asset_type = 5;
    repeated string member_ids = 3;
    optional double price_mult_DEPRECATED = 4;
}

message DLCCatalog {
    repeated DLCItem items = 1;
    repeated ShellSpec shells = 2;
    repeated ShellSetSpec shell_sets = 3;
    repeated ShellSetSpec decorators = 6;
    repeated ShellObjectSpec shell_objects = 4;
    repeated ShellGroupSpec shell_groups = 5;
}

message ShellDB {
    repeated ShellStatus shell_inventory = 1;
    message ShellStatus {
        optional string identifier = 1;
        optional bool owned = 2;
    }
    
    repeated ShellElementStatus shell_element_inventory = 5;
    message ShellElementStatus {
        optional FarmElement element = 1;
        optional string set_identifier = 2;
    }
    
    repeated ShellSetVariationStatus shell_variation_inventory = 8;
    message ShellSetVariationStatus {
        optional string set_identifier = 1;
        repeated string owned_variations = 2;
    }
    
    repeated ShellStatus shell_set_inventory = 2;
    repeated ShellStatus shell_object_inventory = 4;
    
    repeated FarmConfiguration farm_configs = 3;
    message FarmConfiguration {
        repeated ShellConfiguration shell_configs = 1;
        repeated ShellSetConfiguration shell_set_configs = 2;
        optional bool configure_chickens_by_group = 7;
        repeated ShellGroupConfiguration group_configs = 8;
        repeated ChickenConfig chicken_configs = 9;
    }
    
    repeated SavedFarmConfiguration saved_configs = 9;
    message SavedFarmConfiguration {
        optional string name = 1;
        optional FarmConfiguration config = 2;
        optional double client_save_time = 3;
    }
    
    repeated string new_shells_downloaded = 6;
    repeated string new_shells_seen = 7;
    
    message ShellConfiguration {
        optional ShellSpec.AssetType asset_type = 1;
        optional uint32 index = 2;
        optional string shell_identifier = 3;
    }
    
    message ShellSetConfiguration {
        optional FarmElement element = 1;
        optional uint32 index = 2;
        optional string shell_set_identifier = 3;
        optional string variation_identifier = 4;
        optional string decorator_identifier = 5;
    }
    
    message ShellGroupConfiguration {
        optional ShellSpec.AssetType asset_type = 1;
        optional string group_identifier = 2;
    }
    
    message ChickenConfig {
        optional string chicken_identifier = 1;
        optional string hat_identifier = 2;
    }
    
    enum FarmElement {
        HEN_HOUSE = 1;
        SILO = 2;
        MAILBOX = 3;
        TROPHY_CASE = 4;
        GROUND = 5;
        HARDSCAPE = 6;
        HYPERLOOP = 7;
        DEPOT = 8;
        LAB = 9;
        HATCHERY = 10;
        HOA = 11;
        MISSION_CONTROL = 12;
        FUEL_TANK = 13;
        CHICKEN = 14;
        HAT = 15;
        UNKNOWN = 99;
    }
}

message ShellsActionLog {
    optional BasicRequestInfo rinfo = 8;
    optional string user_id = 1;
    optional string action = 2;
    optional string sub_id = 3;
    optional ShellDB.FarmElement farm_element = 9;
    optional uint32 cost = 4;
    optional double approx_time = 5;
    optional string version = 6;
    optional int32 farm_index = 7;
    optional double soul_eggs = 10;
    optional uint64 tickets_spent = 11;
    optional uint64 gold_spent = 12;
}

enum Egg {
    EDIBLE = 1;
    SUPERFOOD = 2;
    MEDICAL = 3;
    ROCKET_FUEL = 4;
    SUPER_MATERIAL = 5;
    FUSION = 6;
    QUANTUM = 7;
    IMMORTALITY = 8;
    TACHYON = 9;
    GRAVITON = 10;
    DILITHIUM = 11;
    PRODIGY = 12;
    TERRAFORM = 13;
    ANTIMATTER = 14;
    DARK_MATTER = 15;
    AI = 16;
    NEBULA = 17;
    UNIVERSE = 18;
    ENLIGHTENMENT = 19;
    CHOCOLATE = 100;
    EASTER = 101;
    WATERBALLOON = 102;
    FIREWORK = 103;
    PUMPKIN = 104;
    UNKNOWN = 1000;
}

enum FarmType {
    EMPTY = 1;
    HOME = 2;
    CONTRACT = 3;
}

enum GoalType {
    EGGS_LAID = 1;
    UNKNOWN_GOAL = 100;
}

enum RewardType {
    CASH = 1;
    GOLD = 2;
    SOUL_EGGS = 3;
    EGGS_OF_PROPHECY = 4;
    EPIC_RESEARCH_ITEM = 5;
    PIGGY_FILL = 6;
    PIGGY_MULTIPLIER = 7;
    PIGGY_LEVEL_BUMP = 8;
    BOOST = 9;
    BOOST_TOKEN = 10;
    ARTIFACT = 11;
    ARTIFACT_CASE = 12;
    CHICKEN = 13;
    SHELL_SCRIPT = 14;
    UNKNOWN_REWARD = 100;
}
